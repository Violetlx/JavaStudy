package com.javase.day4.d;

/**
 * 匿名内部类
 * @author lixuan
 * @Date 2024/6/13 12:29
 */
public class Main7 {
    /**
     * 匿名内部类是我们使用频率非常高的一种内部类，它是局部内部类的简化版
     *
     * 还记得我们之前学习的抽象类和接口吗？在抽象类和接口中都含有某些抽象方法需要子类去实现
     * 我们当时已经很明确地说了不能直接通过 new 的方式去创建一个抽象类或是接口
     * 但是我们可以使用匿名内部类
     */
    public static void main(String[] args) {
        //正常情况下，要创建一个抽象类的实例对象，只能对其进行继承，先实现未实现的方法，然后创建子类对象

        //而我们可以在方法中使用匿名内部类，将其中的抽象方法实现，并直接创建实例对象

        //在new的时候，后面加上花括号，把未实现的方法实现了

        Student student = new Student("张三") {
            //匿名内部类中同样可以使用类中的属性(因为它本质上就是相当于对应类型的子类)
            //因为本质上就相当于是子类，所以说子类定义一些子类的属性完全没有问题
            int a;

            @Override
            public void test() {
                //直接使用父类中的name属性
                System.out.println(name+" ===> 我是匿名内部类的实现!");
            }
        };
        student.test();

        //此时这里创建出来的Student对象，就是一个已经实现了抽象方法的对象，这个抽象类直接就定义号了，甚至连名字都没有，就可以直接创出对象

        System.out.println("===============================");

        //同样，接口也可以通过这种匿名内部类的形式，直接创建一个匿名的接口实现类

        Study study = new Study() {
            @Override
            public void study() {
                System.out.println("匿名内部类实现接口");
            }
        };

        study.study();

        //当然，并不是只有抽象类和接口才可以像这样创建匿名内部类，普通的类也可以，只不过意义不大，一般情况下只是为了进行一些额外的初始工作
    }
}
